// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Products.Infrastructure.Adapters.Postgres;

#nullable disable

namespace Products.Infrastructure.Adapters.Postgres.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250925150311_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Products.Core.Domain.Model.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsArchive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("measure_type_id")
                        .HasColumnType("integer")
                        .HasColumnName("measure_type_id");

                    b.HasKey("Id");

                    b.HasIndex("measure_type_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Products.Core.Domain.Model.SharedKernel.MeasureType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("measure_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "weight"
                        },
                        new
                        {
                            Id = 2,
                            Name = "liquid"
                        });
                });

            modelBuilder.Entity("Products.Core.Domain.Model.ProductAggregate.Product", b =>
                {
                    b.HasOne("Products.Core.Domain.Model.SharedKernel.MeasureType", "MeasureType")
                        .WithMany()
                        .HasForeignKey("measure_type_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MeasureType");
                });
#pragma warning restore 612, 618
        }
    }
}
